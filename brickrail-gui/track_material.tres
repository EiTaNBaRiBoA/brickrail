[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 background_color: hint_color;
uniform vec4 track_color: hint_color;
uniform float track_width: hint_range(0,1);

void vertex() {
	// VERTEX.x = VERTEX.x+UV.x*20.0;
	// VERTEX.y = VERTEX.y+UV.y*20.0;
}

void fragment() {
	float margin = (1.0-track_width)/2.0;
	if (UV.y>margin && UV.y < 1.0-margin) {
		COLOR = track_color;
	}
	else {
		COLOR = background_color;
	}
}"

[resource]
shader = SubResource( 1 )
shader_param/background_color = Color( 0, 0, 0, 1 )
shader_param/track_color = Color( 1, 1, 1, 1 )
shader_param/track_width = 0.326
